{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"blockEditor\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"compose\"]}","webpack:///external {\"this\":[\"wp\",\"data\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}"],"names":["registerBlockType","title","__","description","category","icon","supports","html","edit","className","ref","useRef","__experimentalUseColors","name","property","contrastCheckers","backgroundColor","textColor","colorDetector","targetRef","TextColor","InspectorControlsColorPanel","attributes","paddingSize","partialRight","updateSpacing","marginSize","hasInnerBlocks","InnerBlocks","ButtonBlockAppender","save"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { InnerBlocks, __experimentalUseColors } from '@wordpress/block-editor';\nimport { useRef } from '@wordpress/element';\n\n/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( 'oleti/section', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __( 'Section', 'oleti' ),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __( 'Section Block for Gutenberg', 'oleti' ),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'layout',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPressâ€™ Dashicons, or a custom svg element.\n\t */\n\ticon: 'smiley',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tedit( { className } ) {\n\t\tconst ref = useRef();\n\t\tconst { TextColor, InspectorControlsColorPanel } = __experimentalUseColors(\n\t\t\t[ { name: 'textColor', property: 'color' } ],\n\t\t\t{\n\t\t\t\tcontrastCheckers: { backgroundColor: true, textColor: true },\n\t\t\t\tcolorDetector: { targetRef: ref },\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Spacing', 'oleti' ) }\n\t\t\t\t\t\t//initialOpen={ false }\n\t\t\t\t\t>\n\t\t\t\t\t\t<DimensionControl\n\t\t\t\t\t\t\tlabel={ __( 'Padding', 'oleti' ) }\n\t\t\t\t\t\t\tvalue={ attributes.paddingSize }\n\t\t\t\t\t\t\tonChange={ partialRight(\n\t\t\t\t\t\t\t\tupdateSpacing,\n\t\t\t\t\t\t\t\t'paddingSize'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Adjust spacing around content within the block.',\n\t\t\t\t\t\t\t\t'oleti'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<DimensionControl\n\t\t\t\t\t\t\tlabel={ __( 'Margin', 'oleti' ) }\n\t\t\t\t\t\t\tvalue={ attributes.marginSize }\n\t\t\t\t\t\t\tonChange={ partialRight(\n\t\t\t\t\t\t\t\tupdateSpacing,\n\t\t\t\t\t\t\t\t'marginSize'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Adjust spacing on the sides of the block.',\n\t\t\t\t\t\t\t\t'oleti'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t{ InspectorControlsColorPanel }\n\t\t\t\t<BackgroundColor>\n\t\t\t\t\t<TextColor>\n\t\t\t\t\t\t<div className={ className } ref={ ref }>\n\t\t\t\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\t\t\t\trenderAppender={\n\t\t\t\t\t\t\t\t\t\t! hasInnerBlocks &&\n\t\t\t\t\t\t\t\t\t\tInnerBlocks.ButtonBlockAppender\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TextColor>\n\t\t\t\t</BackgroundColor>\n\t\t\t</>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave() {\n\t\treturn (\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Section Block â€“ hello from the saved content!',\n\t\t\t\t\t'oleti'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t);\n\t},\n} );\n","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}